//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Teacher : Person {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal Teacher(global::System.IntPtr cPtr, bool cMemoryOwn) : base(FLEXPINVOKE.Teacher_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Teacher obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(Teacher obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FLEXPINVOKE.delete_Teacher(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public Teacher(string arg0, string arg1, string arg2, string arg3, string arg4, char arg5, string arg6, string arg7, string arg8, string arg9) : this(FLEXPINVOKE.new_Teacher__SWIG_0(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0, string arg1, string arg2, string arg3, string arg4, char arg5, string arg6, string arg7, string arg8) : this(FLEXPINVOKE.new_Teacher__SWIG_1(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0, string arg1, string arg2, string arg3, string arg4, char arg5, string arg6, string arg7) : this(FLEXPINVOKE.new_Teacher__SWIG_2(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0, string arg1, string arg2, string arg3, string arg4, char arg5, string arg6) : this(FLEXPINVOKE.new_Teacher__SWIG_3(arg0, arg1, arg2, arg3, arg4, arg5, arg6), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0, string arg1, string arg2, string arg3, string arg4, char arg5) : this(FLEXPINVOKE.new_Teacher__SWIG_4(arg0, arg1, arg2, arg3, arg4, arg5), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0, string arg1, string arg2, string arg3, string arg4) : this(FLEXPINVOKE.new_Teacher__SWIG_5(arg0, arg1, arg2, arg3, arg4), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0, string arg1, string arg2, string arg3) : this(FLEXPINVOKE.new_Teacher__SWIG_6(arg0, arg1, arg2, arg3), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0, string arg1, string arg2) : this(FLEXPINVOKE.new_Teacher__SWIG_7(arg0, arg1, arg2), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0, string arg1) : this(FLEXPINVOKE.new_Teacher__SWIG_8(arg0, arg1), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher(string arg0) : this(FLEXPINVOKE.new_Teacher__SWIG_9(arg0), true) {
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public Teacher() : this(FLEXPINVOKE.new_Teacher__SWIG_10(), true) {
  }

  public void setCourse(string arg0) {
    FLEXPINVOKE.Teacher_setCourse(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getCourse() {
    string ret = FLEXPINVOKE.Teacher_getCourse(swigCPtr);
    return ret;
  }

  public void setTID(string arg0) {
    FLEXPINVOKE.Teacher_setTID(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getTID() {
    string ret = FLEXPINVOKE.Teacher_getTID(swigCPtr);
    return ret;
  }

  public void setSalary(string arg0) {
    FLEXPINVOKE.Teacher_setSalary(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getSalary() {
    string ret = FLEXPINVOKE.Teacher_getSalary(swigCPtr);
    return ret;
  }

}
