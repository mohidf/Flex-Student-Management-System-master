//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Person : Login {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal Person(global::System.IntPtr cPtr, bool cMemoryOwn) : base(FLEXPINVOKE.Person_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Person obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(Person obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FLEXPINVOKE.delete_Person(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public void setFirstName(string arg0) {
    FLEXPINVOKE.Person_setFirstName(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setLastName(string arg0) {
    FLEXPINVOKE.Person_setLastName(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setDepName(string arg0) {
    FLEXPINVOKE.Person_setDepName(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setGender(char arg0) {
    FLEXPINVOKE.Person_setGender(swigCPtr, arg0);
  }

  public void setContactNo(string arg0) {
    FLEXPINVOKE.Person_setContactNo(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAddress(string arg0) {
    FLEXPINVOKE.Person_setAddress(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setQualification(string arg0) {
    FLEXPINVOKE.Person_setQualification(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

  public char getGender() {
    char ret = FLEXPINVOKE.Person_getGender(swigCPtr);
    return ret;
  }

  public string getFirstName() {
    string ret = FLEXPINVOKE.Person_getFirstName(swigCPtr);
    return ret;
  }

  public string getLastName() {
    string ret = FLEXPINVOKE.Person_getLastName(swigCPtr);
    return ret;
  }

  public string getDepName() {
    string ret = FLEXPINVOKE.Person_getDepName(swigCPtr);
    return ret;
  }

  public string getContactNo() {
    string ret = FLEXPINVOKE.Person_getContactNo(swigCPtr);
    return ret;
  }

  public string getAddress() {
    string ret = FLEXPINVOKE.Person_getAddress(swigCPtr);
    return ret;
  }

  public string getQualification() {
    string ret = FLEXPINVOKE.Person_getQualification(swigCPtr);
    return ret;
  }

  public string getRegDate() {
    string ret = FLEXPINVOKE.Person_getRegDate(swigCPtr);
    return ret;
  }

  public void setRegDate(string arg0) {
    FLEXPINVOKE.Person_setRegDate(swigCPtr, arg0);
    if (FLEXPINVOKE.SWIGPendingException.Pending) throw FLEXPINVOKE.SWIGPendingException.Retrieve();
  }

}
